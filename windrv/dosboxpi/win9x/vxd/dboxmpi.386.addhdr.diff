 323   0 ^@    12 ^J
 324   0 ^@     3 ^C

Two bytes at offset 322 were changed from 0x00 0x00 to 0x0A 0x03. Hm...

So even though the available documentation implies the LE header is
0xAC, perhaps 0xB0 bytes long, Windows VXD/386 drivers have a header
that appears to have been defined as 0xC4 bytes long. Microsoft's
linker fills the extra fields with zero, however the 386/VXD linking
stage includes a call to "ADDHDR.EXE" which reads the VXD DDB header
and stores the device ID and SDK version at LE_HEADER+0xC0 like this:

0xC0: uint16_t              DDB device ID
0xC2: uint16_t              SDK version (3.10 for Windows 3.1)

Windows will not load the file as a device driver unless these fields
are present.

